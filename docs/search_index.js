var documenterSearchIndex = {"docs":
[{"location":"apis/#API-documentation","page":"API documentation","title":"API documentation","text":"","category":"section"},{"location":"apis/","page":"API documentation","title":"API documentation","text":"Build tables for Kanones dataset:","category":"page"},{"location":"apis/","page":"API documentation","title":"API documentation","text":"adjs1_2\nverbs","category":"page"},{"location":"apis/#LSJMining.adjs1_2","page":"API documentation","title":"LSJMining.adjs1_2","text":"Extract 1st-2nd declension adjectives from v and write a stems table to the Kanones dataset in target.\n\nadjs1_2(v, target)\n\n\n\n\n\n\n","category":"function"},{"location":"apis/#LSJMining.verbs","page":"API documentation","title":"LSJMining.verbs","text":"Extract all verbs from LSJ and format delimited-text representation for Kanones.\n\nverbs(v, registry, target)\n\n\n\n\n\n\n","category":"function"},{"location":"apis/","page":"API documentation","title":"API documentation","text":"splitmorphemes","category":"page"},{"location":"apis/#LSJMining.splitmorphemes","page":"API documentation","title":"LSJMining.splitmorphemes","text":"Split the verb string s into morpheme units.\n\nsplitmorphemes(s, breathsdict; withfailure)\n\n\nMembers\n\nbreathsdict: mapping of breathless forms to fully accented forms\n\n\n\n\n\n","category":"function"},{"location":"apis/","page":"API documentation","title":"API documentation","text":"Filters to select regular verb classes:","category":"page"},{"location":"apis/","page":"API documentation","title":"API documentation","text":"vowelverb\nliquidverb\nstopverb\ncontractverb\nizwverb\nsigmaverb\nnumiverb\nirregmiverb\nirregomega","category":"page"},{"location":"apis/#LSJMining.vowelverb","page":"API documentation","title":"LSJMining.vowelverb","text":"True if label for m is a vowel-stem verb pattern.\n\n\n\n\n\n","category":"function"},{"location":"apis/#LSJMining.liquidverb","page":"API documentation","title":"LSJMining.liquidverb","text":"True if label for m is a liquid verb pattern.\n\n\n\n\n\n","category":"function"},{"location":"apis/#LSJMining.stopverb","page":"API documentation","title":"LSJMining.stopverb","text":"True if label for m is a stop verb pattern.\n\n\n\n\n\n","category":"function"},{"location":"apis/#LSJMining.contractverb","page":"API documentation","title":"LSJMining.contractverb","text":"True if label for m is a contract verb pattern.\n\n\n\n\n\n","category":"function"},{"location":"apis/#LSJMining.izwverb","page":"API documentation","title":"LSJMining.izwverb","text":"True if label for m is a regular verb pattern in -ίζω.\n\n\n\n\n\n","category":"function"},{"location":"apis/#LSJMining.sigmaverb","page":"API documentation","title":"LSJMining.sigmaverb","text":"True if label for m is a stop verb pattern.\n\n\n\n\n\n","category":"function"},{"location":"apis/#LSJMining.numiverb","page":"API documentation","title":"LSJMining.numiverb","text":"True if label for m is a regular verb pattern in -νυμι.\n\n\n\n\n\n","category":"function"},{"location":"apis/#LSJMining.irregmiverb","page":"API documentation","title":"LSJMining.irregmiverb","text":"True if label for m is an iregular -μι verb pattern.\n\n\n\n\n\n","category":"function"},{"location":"apis/#LSJMining.irregomega","page":"API documentation","title":"LSJMining.irregomega","text":"True if label for m is an iregular -ω verb pattern.\n\n\n\n\n\n","category":"function"},{"location":"apis/","page":"API documentation","title":"API documentation","text":"Utilities for managing files:","category":"page"},{"location":"apis/","page":"API documentation","title":"API documentation","text":"loadmorphdata","category":"page"},{"location":"apis/#LSJMining.loadmorphdata","page":"API documentation","title":"LSJMining.loadmorphdata","text":"Load morphology data from files in cex directory of repository, and filter for entries with valid orthography only.\n\nloadmorphdata(cexdir, kroot)\n\n\n\n\n\n\nLoad all morphology data from files in cex directory of repository.\n\nloadmorphdata(cexdir)\n\n\n\n\n\n\n","category":"function"},{"location":"","page":"Overview","title":"Overview","text":"repo = pwd() |> dirname |> dirname","category":"page"},{"location":"#LSJMining:-overview","page":"Overview","title":"LSJMining: overview","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"Quarry morphological data from the Perseus edition of Liddell-Scott-Jones, Greek Lexicon.","category":"page"},{"location":"#Data-in-this-repository","page":"Overview","title":"Data in this repository","text":"","category":"section"},{"location":"#Source","page":"Overview","title":"Source","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"The LSJMining package takes it XML data from Giuseppe Celano's conversion of beta-code Greek in the Perseus Liddell-Scott-Jones Greek Lexicon to Unicode Greek, available here.  ","category":"page"},{"location":"#Organization","page":"Overview","title":"Organization","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"files in the directory sourcedata contain TEI entryFree elements  from the Perseus LSJ, formatted with one entry per line.\nfiles in the cex directory named morphdata_*.cex are delimited-text files with morphological data extracted from Perseus LSJ using the package LexiconMining.  The morphdata_*.cex files are created from hints in the TEI markup to identify seven items: a unique identifier, a tidied-up label, the lemma string in the lexicon, a part of speech, an inflectional type, a genitive form for nouns, and a mood for verbs.  (The latter is not extracted from the LSJ markup, and is always an empty string in this repository.)","category":"page"},{"location":"#License","page":"Overview","title":"License","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"The data here are available under vesion 4.0 of the Creative Commons BY-NC-SA license.","category":"page"},{"location":"#Code","page":"Overview","title":"Code","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"The goal of this package is to construct a morphological lexicon formatted for use with Kanones.","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"The kanones function morphological data from this repository, and writes tables of stems data formatted for Kanones in a target directory.  It consults a specified clone of the Kanones.jl repository to filter out stems for any lexemes already defined in the core datasets included in Kanones.jl.  ","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"The kanonesdata/lsjx directory contains the current output of the kanones function. It is created by cloning the Kanones.jl repository  in an adjacent directory, and executing the following lines:","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"using LSJMining\n\nsrc = \"cex\"\ntarget = joinpath(pwd(), \"kanonesdata\",\"lsjx\")\nkroot = joinpath(\"..\",\"greek2021\",\"Kanones.jl\")\n\nkanones(src, target, kroot)","category":"page"},{"location":"#Other-things-you-can-do","page":"Overview","title":"Other things you can do","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"If you want to work directly with the extracted morphological data, you can read the cex directory's files into a vector of MorphData objects.","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"using LSJMining\ncexdir = joinpath(repo, \"cex\")\nmorph = loadmorphdata(cexdir)","category":"page"},{"location":"#Other-material-in-this-repository","page":"Overview","title":"Other material in this repository","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"scripts: some Julia scripts for managing data in this repository","category":"page"}]
}
